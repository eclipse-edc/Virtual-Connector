[metadata]
format.version = "1.1"

[versions]
edc = "0.15.0-SNAPSHOT"
awaitility = "4.3.0"
restAssured = "5.5.6"
testcontainers = "1.21.3"
rsApi = "4.0.0"
nimbus = "10.5"
opentelemetry = "2.20.1"
postgres = "42.7.8"
parsson = "1.1.7"
nats = "2.23.0"
wiremock = "3.13.1"
bouncyCastle-jdk18on = "1.82"

[libraries]
# EDC SPI modules
edc-spi-core = { module = "org.eclipse.edc:core-spi", version.ref = "edc" }
edc-spi-participantcontext = { module = "org.eclipse.edc:connector-participant-context-spi", version.ref = "edc" }
edc-spi-participantcontext-config = { module = "org.eclipse.edc:participant-context-config-spi", version.ref = "edc" }
edc-spi-transaction = { module = "org.eclipse.edc:transaction-spi", version.ref = "edc" }
edc-spi-transaction-datasource = { module = "org.eclipse.edc:transaction-datasource-spi", version.ref = "edc" }
edc-spi-protocol = { module = "org.eclipse.edc:protocol-spi", version.ref = "edc" }
edc-spi-contract = { module = "org.eclipse.edc:contract-spi", version.ref = "edc" }
edc-spi-transfer = { module = "org.eclipse.edc:transfer-spi", version.ref = "edc" }
edc-spi-policy = { module = "org.eclipse.edc:policy-spi", version.ref = "edc" }
edc-spi-jsonld = { module = "org.eclipse.edc:json-ld-spi", version.ref = "edc" }
edc-spi-dsp = { module = "org.eclipse.edc:dsp-spi", version.ref = "edc" }
edc-spi-dsp-v2025 = { module = "org.eclipse.edc:dsp-spi-2025", version.ref = "edc" }
edc-spi-dsp-http = { module = "org.eclipse.edc:dsp-http-spi", version.ref = "edc" }
edc-spi-web = { module = "org.eclipse.edc:web-spi", version.ref = "edc" }
edc-spi-dataplane = { module = "org.eclipse.edc:data-plane-spi", version.ref = "edc" }
edc-spi-control-plane = { module = "org.eclipse.edc:control-plane-spi", version.ref = "edc" }

# EDC Core modules
edc-core-controlplane-client = { module = "org.eclipse.edc:control-plane-api-client", version.ref = "edc" }
edc-core-controlplane = { module = "org.eclipse.edc:control-plane-core", version.ref = "edc" }
edc-core-connector = { module = "org.eclipse.edc:connector-core", version.ref = "edc" }
edc-core-runtime = { module = "org.eclipse.edc:runtime-core", version.ref = "edc" }
edc-core-token = { module = "org.eclipse.edc:token-core", version.ref = "edc" }
edc-core-jersey = { module = "org.eclipse.edc:jersey-core", version.ref = "edc" }
edc-core-jetty = { module = "org.eclipse.edc:jetty-core", version.ref = "edc" }
edc-core-dsp-http = { module = "org.eclipse.edc:dsp-http-core", version.ref = "edc" }
edc-core-dsp-http-configuration = { module = "org.eclipse.edc:dsp-http-api-base-configuration", version.ref = "edc" }
edc-core-dsp-http-dispatcher-v2025 = { module = "org.eclipse.edc:dsp-http-dispatcher-2025", version.ref = "edc" }
edc-core-dsp-http-catalog-dispatcher = { module = "org.eclipse.edc:dsp-catalog-http-dispatcher", version.ref = "edc" }
edc-core-dsp-http-negotiation-dispatcher = { module = "org.eclipse.edc:dsp-negotiation-http-dispatcher", version.ref = "edc" }
edc-core-dsp-http-transferprocess-dispatcher = { module = "org.eclipse.edc:dsp-transfer-process-http-dispatcher", version.ref = "edc" }
edc-core-dsp-catalog-transform-v2025 = { module = "org.eclipse.edc:dsp-catalog-transform-2025", version.ref = "edc" }
edc-core-dsp-negotiation-transform-v2025 = { module = "org.eclipse.edc:dsp-negotiation-transform-2025", version.ref = "edc" }
edc-core-dsp-transferprocess-transform-v2025 = { module = "org.eclipse.edc:dsp-transfer-process-transform-2025", version.ref = "edc" }
edc-core-dsp-version-http-api = { module = "org.eclipse.edc:dsp-version-http-api", version.ref = "edc" }
edc-core-participantcontext-single = { module = "org.eclipse.edc:participant-context-single-core", version.ref = "edc" }
edc-core-dataplane-selector = { module = "org.eclipse.edc:data-plane-selector-core", version.ref = "edc" }
edc-core-dataplane-signaling-client = { module = "org.eclipse.edc:data-plane-signaling-client", version.ref = "edc" }
edc-core-dataplane-signaling-transfer = { module = "org.eclipse.edc:transfer-data-plane-signaling", version.ref = "edc" }

# EDC Lib modules
edc-lib-store = { module = "org.eclipse.edc:store-lib", version.ref = "edc" }
edc-lib-query = { module = "org.eclipse.edc:query-lib", version.ref = "edc" }
edc-lib-sql = { module = "org.eclipse.edc:sql-lib", version.ref = "edc" }
edc-lib-jsonld = { module = "org.eclipse.edc:json-ld-lib", version.ref = "edc" }
edc-lib-transform = { module = "org.eclipse.edc:transform-lib", version.ref = "edc" }
edc-lib-controlplane-transform = { module = "org.eclipse.edc:control-plane-transform", version.ref = "edc" }
edc-lib-jersey-providers = { module = "org.eclipse.edc:jersey-providers-lib", version.ref = "edc" }
edc-lib-dsp-catalog-validation = { module = "org.eclipse.edc:dsp-catalog-validation-lib", version.ref = "edc" }
edc-lib-dsp-catalog-http = { module = "org.eclipse.edc:dsp-catalog-http-api-lib", version.ref = "edc" }
edc-lib-dsp-negotiation-validation = { module = "org.eclipse.edc:dsp-negotiation-validation-lib", version.ref = "edc" }
edc-lib-dsp-negotiation-http = { module = "org.eclipse.edc:dsp-negotiation-http-api-lib", version.ref = "edc" }
edc-lib-dsp-transferprocess-validation = { module = "org.eclipse.edc:dsp-transfer-process-validation-lib", version.ref = "edc" }
edc-lib-dsp-transferprocess-http = { module = "org.eclipse.edc:dsp-transfer-process-http-api-lib", version.ref = "edc" }
edc-build-plugin = { module = "org.eclipse.edc.edc-build:org.eclipse.edc.edc-build.gradle.plugin", version.ref = "edc" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }

# EDC Extensions modules
edc-iam-mock = { module = "org.eclipse.edc:iam-mock", version.ref = "edc" }
edc-tck-extension = { module = "org.eclipse.edc:tck-extension", version.ref = "edc" }
edc-vault-hashicorp = { module = "org.eclipse.edc:vault-hashicorp", version.ref = "edc" }
edc-crypto-verifiablecredentials-ldp = { module = "org.eclipse.edc:ldp-verifiable-credentials", version.ref = "edc" }
edc-crypto-verifiablecredentials-jwt = { module = "org.eclipse.edc:jwt-verifiable-credentials", version.ref = "edc" }
edc-api-observability = { module = "org.eclipse.edc:api-observability", version.ref = "edc" }
# EDC DCP modules
edc-iam-dcp-core = { module = "org.eclipse.edc:identity-trust-core", version.ref = "edc" }
edc-iam-decentralized = { module = "org.eclipse.edc:decentralized-identity", version.ref = "edc" }
edc-oauth2-client = { module = "org.eclipse.edc:oauth2-client", version.ref = "edc" }

# EDC BOM modules
edc-bom-controlplane-sql = { module = "org.eclipse.edc:controlplane-feature-sql-bom", version.ref = "edc" }
edc-bom-dataplane = { module = "org.eclipse.edc:dataplane-base-bom", version.ref = "edc" }

## EDC Fixtures
edc-fixtures-sql = { module = "org.eclipse.edc:sql-test-fixtures", version.ref = "edc" }

### IH for testing
edc-ih-test-fixtures = { module = "org.eclipse.edc:identityhub-test-fixtures", version.ref = "edc" }
edc-bom-identityhub = { module = "org.eclipse.edc:identityhub-bom", version.ref = "edc" }
edc-bom-identityhub-sql = { module = "org.eclipse.edc:identityhub-feature-sql-bom", version.ref = "edc" }
edc-bom-issuerservice = { module = "org.eclipse.edc:issuerservice-bom", version.ref = "edc" }
edc-bom-issuerservice-sql = { module = "org.eclipse.edc:issuerservice-feature-sql-bom", version.ref = "edc" }

# Other libraries
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
restAssured = { module = "io.rest-assured:rest-assured", version.ref = "restAssured" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-vault = { module = "org.testcontainers:vault", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
jakarta-rsApi = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "rsApi" }
nimbus-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus" }
opentelemetry-instrumentation-annotations = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations", version.ref = "opentelemetry" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
parsson = { module = "org.eclipse.parsson:parsson", version.ref = "parsson" }
nats-client = { module = "io.nats:jnats", version.ref = "nats" }
wiremock = { module = "org.wiremock:wiremock-jetty12", version.ref = "wiremock" }
bouncyCastle-bcpkixJdk18on = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncyCastle-jdk18on" }
bouncyCastle-bcprovJdk18on = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncyCastle-jdk18on" }

[bundles]
dcp = [
    "edc-crypto-verifiablecredentials-jwt",
    "edc-crypto-verifiablecredentials-ldp",
    "edc-iam-dcp-core",
    "edc-oauth2-client",
    "edc-iam-decentralized"
]

[plugins]
edc-build = { id = "org.eclipse.edc.edc-build", version = "1.1.1" }
shadow = { id = "com.github.johnrengelman.shadow", version = "8.1.1" }
docker = { id = "com.bmuschko.docker-remote-api", version = "9.4.0" }
